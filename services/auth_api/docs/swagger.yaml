openapi: 3.0.1
info:
  title: API Title
  version: "1.0"
servers:
  - url: https://server.test/api
paths:
  /admin/users/:
    get:
      description: Список пользователей
      parameters:
        - name: access-token
          in: header
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/UserCRUDSchema'
    post:
      description: Создание пользователя
      parameters:
        - name: access-token
          in: header
          required: true
          schema:
            type: string
      requestBody:
        content:
          'application/json':
            schema:
              $ref: '#/components/schemas/UserCRUDSchema'
        required: true
      responses:
        201:
          description: Success
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/UserCRUDSchema'
        400:
          description: Error
          content: { }
  /admin/users/{pk}:
    get:
      description: Просмотреть пользователя
      parameters:
        - name: access-token
          in: header
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/UserCRUDSchema'
    put:
      description: Обновить пользователя
      parameters:
        - name: access-token
          in: header
          required: true
          schema:
            type: string
      requestBody:
        content:
          'application/json':
            schema:
              $ref: '#/components/schemas/UserCRUDSchema'
        required: true
      responses:
        201:
          description: Success
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/UserCRUDSchema'
        400:
          description: Error
          content: { }
    delete:
      description: Удалить пользователя
      parameters:
        - name: access-token
          in: header
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Success
  /admin/roles/:
    get:
      description: Список ролей
      parameters:
        - name: access-token
          in: header
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/RoleSchema'
    post:
      description: Создание роли
      parameters:
        - name: access-token
          in: header
          required: true
          schema:
            type: string
      requestBody:
        content:
          'application/json':
            schema:
              $ref: '#/components/schemas/RoleSchema'
        required: true
      responses:
        201:
          description: Success
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/RoleSchema'
        400:
          description: Error
          content: { }
  /admin/roles/{pk}:
    get:
      description: Просмотреть роль
      parameters:
        - name: access-token
          in: header
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/RoleSchema'
    put:
      description: Обновить роль
      parameters:
        - name: access-token
          in: header
          required: true
          schema:
            type: string
      requestBody:
        content:
          'application/json':
            schema:
              $ref: '#/components/schemas/RoleSchema'
        required: true
      responses:
        201:
          description: Success
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/RoleSchema'
        400:
          description: Error
          content: { }
    delete:
      description: Удалить пользователя
      parameters:
        - name: access-token
          in: header
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Success
  /admin/users/{pk}/roles:
    get:
      description: Список ролей пользователей
      parameters:
        - name: access-token
          in: header
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/UserRoleSchema'
    post:
      description: Добавление роли пользователю
      parameters:
        - name: access-token
          in: header
          required: true
          schema:
            type: string
      requestBody:
        content:
          'application/json':
            schema:
              $ref: '#/components/schemas/UserRoleSchema'
        required: true
      responses:
        201:
          description: Success
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/UserRoleSchema'
        400:
          description: Error
          content: { }
  /admin/user_roles/{pk}:
    delete:
      description: Удалить роль пользователя
      parameters:
        - name: access-token
          in: header
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Success
  /user/registration:
    post:
      description: Регистрация пользователя
      requestBody:
        content:
          'application/json':
            schema:
              $ref: '#/components/schemas/User'
        required: true
      responses:
        201:
          description: Success
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/Tokens'
        400:
          description: Error
          content: { }
      x-codegen-request-body-name: data
  /login:
    post:
      description: Авторизация пользователя
      requestBody:
        content:
          'application/json':
            schema:
              $ref: '#/components/schemas/User'
        required: true
      responses:
        201:
          description: Success
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/Tokens'
        400:
          description: Error
          content: { }
      x-codegen-request-body-name: data
  /logout:
    get:
      description: Выход пользователя
      parameters:
        - name: refresh-token
          in: header
          required: true
          schema:
            type: string
      responses:
        200:
          description: success
          content: { }
  /user/token/refresh:
    get:
      description: Обновить токен
      parameters:
        - name: refresh-token
          in: header
          required: true
          schema:
            type: string
      responses:
        200:
          description: success
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/Tokens'
        401:
          description: error
          content: { }
  /user/password:
    post:
      description: Сменить пароль
      parameters:
        - name: access-token
          in: header
          required: true
          schema:
            type: string
      requestBody:
        content:
          'application/json':
            schema:
              $ref: '#/components/schemas/UserPassword'
        required: true
      responses:
        200:
          description: success
          content: { }
        401:
          description: error
          content: { }
      x-codegen-request-body-name: data
  /user/journal/login:
    post:
      description: История входов
      parameters:
        - name: access-token
          in: header
          required: true
          schema:
            type: string
      responses:
        200:
          description: success
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/UserLoginJournal'
        401:
          description: error
          content: { }
  /social_auth/login/{backend}:
    get:
      description: вход с помощью соцсетей
      responses:
        302:
          description: Success
          content: { }
  /social_auth/callback/{backend}:
    get:
      description: редирект из соцсети
      responses:
        200:
          description: success
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/Tokens'
        401:
          description: error
          content: { }
  /user/token/verify:
    get:
      description: Проверить действительность токена
      parameters:
        - name: access-token
          in: header
          required: true
          schema:
            type: string
      responses:
        200:
          description: success
          content: { }
        401:
          description: error
          content: { }
components:
  schemas:
    User:
      type: object
      properties:
        email:
          title: email
          minLength: 1
          type: string
        password:
          title: Password
          minLength: 1
          type: string
    Tokens:
      type: object
      properties:
        access_token:
          title: access token
          minLength: 1
          type: string
        refresh_token:
          title: Refresh token
          minLength: 1
          type: string
    UserPassword:
      type: object
      properties:
        password:
          title: Old password
          minLength: 1
          type: string
        new_password:
          title: New password
          minLength: 1
          type: string
    UserLoginDataLog:
      type: object
      properties:
        date:
          title: Date
          type: string
          format: date-time
        device:
          title: Device
          minLength: 1
          type: string
    UserLoginJournal:
      type: array
      items:
        $ref: '#/components/schemas/UserLoginDataLog'
    UserCRUDSchema:
      type: object
      properties:
        email:
          title: email
          minLength: 1
          type: string
        password:
          title: Password
          minLength: 1
          type: string
        is_superuser:
          title: is superuser
          minLength: 1
          type: boolean
    RoleSchema:
      type: object
      properties:
        name:
          title: name
          minLength: 1
          type: string
        description:
          title: description
          minLength: 1
          type: string
    UserRoleSchema:
      type: object
      properties:
        id:
          title: name
          minLength: 1
          type: string
        role:
          type: array
          items:
            $ref: '#/components/schemas/RoleSchema'
